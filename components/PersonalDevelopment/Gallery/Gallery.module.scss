@use '../../../styles/colors' as *;
@use '../../../styles/breakpoints' as *;
@use '../../../styles/variables' as *;

$max-height: 35.5rem;

.wrapper {
  position: relative;
  padding-top: 8rem;
}

.text-wrapper {
  position: absolute;
  top: 2rem;
  left: 2rem;
  z-index: 1;

  @include md {
    max-width: 45%;
  }

  @include lg {
    top: auto;
    bottom: 2rem;
  }
}

.text-wrapper p {
  color: $gray--14;
}

.grid {
  display: grid;
  gap: 0.3rem;

  @include md {
    grid-template-columns: repeat(2, 1fr);
  }

  @include lg {
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(2, 1fr);
    gap: 0 0.3rem;
  }

  position: relative;
}

.grid .img-wrapper img {
  object-fit: cover !important;
  cursor: pointer;
  height: 100% !important;
}

.grid .img-wrapper {
  max-height: $max-height;
}

.grid .img-wrapper:not(:first-of-type) {
  max-height: calc($max-height / 2);
}

.grid .img-wrapper:nth-of-type(1) {

  @include lg {
    grid-area: 1 / 1 / 3 / 3;
  }
}

.grid .img-wrapper:nth-of-type(2) {
  @include lg {
    grid-area: 1 / 3 / 2 / 4;
  }
}

.grid .img-wrapper:nth-of-type(3) {
  @include lg {
    grid-area: 1 / 4 / 2 / 5;
  }
}

.grid .img-wrapper:nth-of-type(4) {
  @include lg {
    grid-area: 2 / 3 / 3 / 5;
    padding-top: 0.3rem;
  }
}